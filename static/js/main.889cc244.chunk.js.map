{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/action-types.js","components/Forma/Forma.js","redux/filter/filter-actions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","App.js","index.js","components/Forma/Forma.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","removeContact","Form","onSubmit","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","className","css","form","preventDefault","label","type","pattern","title","placeholder","required","onChange","btn","filter","Filter","useSelector","state","box","contact","input","ContactList","contacts","items","filterValue","getVisibleContacts","useCallback","normalizedFilter","toLowerCase","includes","useEffect","length","visibleContacts","list","map","item","onClick","handleRemove","contactsReducer","createReducer","find","alert","filterReducer","action","persistConfig","key","storage","blacklist","rootReducer","combineReducers","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistedStore","persistStore","App","loading","persistor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889cc244.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Filter_contact__1Zvje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Ypc0\",\"item\":\"ContactList_item__1EOC7\",\"btn\":\"ContactList_btn__3Rgwl\"};","import { ADD_CONTACT, REMOVE_CONTACT } from \"../action-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n  payload: { name, number, id: nanoid() },\r\n}));\r\n\r\nexport const removeContact = createAction(REMOVE_CONTACT);\r\n","export const ADD_CONTACT = \"App/addContact\";\r\nexport const FILTER = \"App/filter\";\r\nexport const REMOVE_CONTACT = \"App/removeContact\";\r\n","import { useState } from \"react\";\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\nimport { useDispatch } from \"react-redux\";\nimport css from \"./Forma.module.css\";\n\nfunction Form({ onSubmit }) {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Freddie Mercury\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"+38 (0XX) XXX-XX-XX\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.btn}>Add contact</button>\n    </form>\n  );\n}\nexport default Form;\n","import { FILTER } from \"../action-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filter = createAction(FILTER);\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { filter } from \"../../redux/filter/filter-actions\";\nimport css from \"./Filter.module.css\";\n\nfunction Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.box}>\n      <label className={css.contact}>\n        Filter\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter contact name\"\n          value={value}\n          onChange={(e) => dispatch(filter(e.currentTarget.value))}\n        ></input>\n      </label>\n    </div>\n  );\n}\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\nimport { filter } from \"../../redux/filter/filter-actions\";\nimport css from \"./ContactList.module.css\";\nimport { useEffect, useCallback } from \"react\";\n\nfunction ContactList() {\n  const contacts = useSelector((state) => state.items);\n  const filterValue = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  function handleRemove(id) {\n    dispatch(removeContact(id));\n  }\n  const getVisibleContacts = useCallback(() => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [contacts, filterValue]);\n\n  useEffect(() => {\n    if (getVisibleContacts().length === 0 && filterValue !== \"\") {\n      dispatch(filter(\"\"));\n    }\n  }, [getVisibleContacts, dispatch]);\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <ul className={css.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => (\n          <li className={css.item} key={id}>\n            {`${name}: ${number}`}\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => handleRemove(id)}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact } from \"./contacts-actions\";\r\n\r\nexport const contactsReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    let unicName = state.find((contact) => contact.name === payload.name);\r\n    if (unicName) {\r\n      alert(\"This contact is already exists\");\r\n      return state;\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [removeContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n","import { filter } from \"./filter-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [filter]: (state, action) => action.payload,\r\n});\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\r\nimport { filterReducer } from \"./filter/filter-reducer\";\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducer),\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport const persistedStore = persistStore(store);\r\n\r\nexport default store;\r\n","import \"./App.css\";\nimport Form from \"./components/Forma/Forma\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistedStore } from \"./redux/store\";\n\nfunction App() {\n  return (\n    <PersistGate loading={null} persistor={persistedStore}>\n      <section className=\"wrapper\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Form />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n    </PersistGate>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import \"../node_modules/modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forma_form__ATzrx\",\"label\":\"Forma_label__luntn\",\"btn\":\"Forma_btn__2s-bV\"};"],"sourceRoot":""}