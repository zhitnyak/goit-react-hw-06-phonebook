{"version":3,"sources":["components/Forma/Forma.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/Forma/Forma.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","setState","reset","className","css","form","preventDefault","label","type","pattern","title","required","onChange","btn","Filter","box","contact","input","ContactList","contacts","list","length","map","id","item","onClick","initialContacts","App","setContacts","filter","setFilter","useEffect","localContacts","JSON","parse","localStorage","getItem","setItem","stringify","find","alert","prevState","nanoid","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5daf2a70.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport css from \"./Forma.module.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      // [e.currentTarget.name]: e.currentTarget.number,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={css.btn}>Add contact</button>\n    </form>\n  );\n};\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={css.box}>\n    <label className={css.contact}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onChange }) => {\n  return (\n    <ul className={css.list}>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <li className={css.item} key={id}>\n            {`${name}: ${number}`}\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => onChange(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Forma/Forma\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nconst initialContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (localContacts) {\n      setContacts(localContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    let unicName = contacts.find((contact) => contact.name === name);\n\n    if (unicName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts((prevState) => [\n        { id: nanoid(), name, number },\n        ...prevState,\n      ]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  return (\n    <>\n      <section className=\"wrapper\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Form onSubmit={addContact} />\n        <h2 className=\"title\">Contacts</h2>\n        {contacts.length === 0 ? null : (\n          <Filter value={filter} onChange={changeFilter} />\n        )}\n        <ContactList contacts={getVisibleContacts()} onChange={deleteContact} />\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forma_form__ATzrx\",\"label\":\"Forma_label__luntn\",\"btn\":\"Forma_btn__2s-bV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Filter_contact__1Zvje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Ypc0\",\"item\":\"ContactList_item__1EOC7\",\"btn\":\"ContactList_btn__3Rgwl\"};"],"sourceRoot":""}